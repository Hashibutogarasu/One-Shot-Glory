name: Java CI with Gradle

on:
  push:
    branches: ["main"]
    paths:
      - 'src/**'
  pull_request:
    branches: ["main"]
    paths:
      - 'src/**'
  workflow_call:  # 他のワークフローから呼び出せるようにする

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write  # アーティファクトに書き込む権限を追加
    outputs:
      build_executed: ${{ steps.check_changes.outputs.build_executed }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # 変更検出のために少なくとも2つのコミットを取得
          
      - name: Check for src changes
        id: check_changes
        run: |
          if [ "${{ github.event_name }}" == "workflow_call" ]; then
            echo "Source changes bypassed for workflow_call" 
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "build_executed=true" >> $GITHUB_OUTPUT
          else
            git diff --name-only HEAD^ HEAD > changes.txt
            if grep -q "^src/" changes.txt; then
              echo "Source code changes detected"
              echo "has_changes=true" >> $GITHUB_OUTPUT
              echo "build_executed=true" >> $GITHUB_OUTPUT
            else
              echo "No source code changes detected"
              echo "has_changes=false" >> $GITHUB_OUTPUT
              echo "build_executed=false" >> $GITHUB_OUTPUT
            fi
          fi
          
      - name: Make gradlew executable
        if: steps.check_changes.outputs.has_changes == 'true'
        run: chmod +x ./gradlew
        
      - name: Set up JDK 17
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Gradle
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Build with Gradle Wrapper
        if: steps.check_changes.outputs.has_changes == 'true'
        run: ./gradlew build
        
      - name: Upload Plugin JAR
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: One-Shot-Glory-Plugin
          path: build/libs/One-Shot-Glory-*-build.*.jar
          if-no-files-found: error
          retention-days: 90  # 90日間アーティファクトを保存

  dependency-submission:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.build_executed == 'true'
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        if: needs.build.outputs.build_executed == 'true'
      
      - name: Set up JDK 17
        if: needs.build.outputs.build_executed == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Generate and submit dependency graph
        if: needs.build.outputs.build_executed == 'true'
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582
