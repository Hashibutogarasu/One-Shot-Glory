plugins {
    id 'java'
}

group = 'com.karasu256.one_shot_glory'

// ビルド番号を保存するプロパティファイルを定義
def buildNumberFile = file('build-number.properties')
def buildProps = new Properties()

// プロパティファイルが存在する場合は読み込む、存在しない場合は新規作成
if (buildNumberFile.exists()) {
    buildNumberFile.withInputStream { buildProps.load(it) }
} else {
    buildProps.setProperty('buildNumber', '0')
    buildNumberFile.createNewFile()
}

// 現在のビルド番号を取得
def buildNumber = buildProps.getProperty('buildNumber').toInteger()

// バージョン番号の設定（メジャー.マイナー-build.ビルド番号）
version = '0.1-build.' + buildNumber

// ビルド実行時にビルド番号をインクリメント
task incrementBuildNumber {
    doLast {
        buildNumber++
        buildProps.setProperty('buildNumber', buildNumber.toString())
        buildNumberFile.withOutputStream { buildProps.store(it, "Build Number for ${project.name}") }
        println "Build number incremented to ${buildNumber}"
    }
}

// ビルドタスクの前にビルド番号をインクリメント
tasks.named('build').configure {
    dependsOn incrementBuildNumber
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "sponge"
        url = "https://repo.spongepowered.org/repository/maven-public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


tasks.register('buildJar', Jar) {
    archiveBaseName.set('OneShotGlory')
    from sourceSets.main.output
    dependsOn configurations.compileClasspath
}

tasks.register('copyJar', Copy) {
    from buildJar
    into 'run/plugins'
}